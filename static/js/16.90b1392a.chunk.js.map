{"version":3,"sources":["views/mail/MailView/Sidebar/LabelItem.js","views/mail/MailView/Sidebar/index.js","views/mail/MailView/MailList/Toolbar.js","views/mail/MailView/MailList/MailItem.js","views/mail/MailView/MailList/index.js","views/mail/MailView/MailDetails/Toolbar.js","views/mail/MailView/MailDetails/MailReply.js","views/mail/MailView/MailDetails/index.js","components/QuillEditor.js","views/mail/MailView/MailNew.js","views/mail/MailView/index.js","utils/getInitials.js"],"names":["systemLabelIcons","all","MailIcon","inbox","InboxIcon","trash","DeleteIcon","drafts","DraftsIcon","spam","ReportIcon","sent","SendIcon","starred","StarIcon","important","LabelImportantIcon","useStyles","makeStyles","theme","root","padding","content","flexGrow","height","color","palette","text","secondary","borderTopRightRadius","borderBottomRightRadius","paddingRight","paddingLeft","fontWeight","typography","fontWeightRegular","backgroundColor","action","hover","active","fontWeightMedium","selected","label","labelRoot","display","alignItems","spacing","icon","marginRight","LabelItem","rest","classes","Icon","type","id","LabelIcon","getIcon","to","name","getTo","getColor","displayUnreadCount","Boolean","unreadCount","ListItem","className","ButtonBase","activeClassName","component","RouterLink","style","Typography","variant","drawerDesktopRoot","width","flexShrink","drawerDesktopPaper","position","drawerMobilePaper","drawerMobileBackdrop","Sidebar","containerRef","dispatch","useDispatch","location","useLocation","useSelector","state","mail","labels","sidebarOpen","useEffect","closeSidebar","pathname","Box","px","py","Button","fullWidth","onClick","openNewMessage","Divider","pr","List","map","key","Hidden","smDown","Drawer","paper","mdUp","open","onClose","zIndex","BackdropProps","ModalProps","container","current","background","default","searchInput","marginLeft","Toolbar","mails","onDeselectAll","onSelectAll","selectedMails","selectedAllMails","selectedSomeMails","clsx","IconButton","openSidebar","SvgIcon","fontSize","Checkbox","checked","checkbox","indeterminate","onChange","event","target","Paper","Input","disableUnderline","placeholder","Tooltip","title","noWrap","defualtProps","borderBottom","divider","unread","left","top","error","main","fontWeightBold","filterActive","colors","amber","cursor","textDecoration","details","breakpoints","up","minWidth","flexBasis","subject","maxWidth","whiteSpace","overflow","textOverflow","message","fontFamily","pxToRem","common","white","paddingTop","paddingBottom","borderRadius","date","MailItem","onDeselect","onSelect","params","useParams","mailId","systemLabel","customLabel","isUnread","mr","isStarred","isImportant","Avatar","src","from","avatar","getInitials","ml","labelIds","length","mx","labelId","find","_label","moment","createdAt","format","dark","MailList","useState","setSelectedMails","getMails","allIds","byId","prevSelectedMails","filter","handleDeselectOneMail","includes","handleSelectOneMail","history","useHistory","push","mdDown","textarea","body1","primary","border","outline","resize","fileInput","MailReply","user","account","fileInputRef","useRef","value","setValue","handleAttach","click","alt","TextareaAutosize","persist","rows","mt","size","ref","flexDirection","overflowY","marginBottom","MailDetails","getMail","p","justifyContent","Link","email","person","bgcolor","source","borderLeft","borderTop","borderRight","stroke","boxShadow","shadows","shape","stepButton","QuillEditor","maxHeight","bottom","right","margin","minHeight","fullScreen","input","editor","MailNew","newMessageOpen","setFullScreen","messageBody","setMessageBody","Portal","Backdrop","elevation","closeNewMessage","MailView","pageRef","getLabels","Page","replace","split","slice","v","toUpperCase","join"],"mappings":"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","file":"static/js/16.90b1392a.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  ListItem,\n  ButtonBase,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport LabelIcon from '@material-ui/icons/Label';\nimport SendIcon from '@material-ui/icons/Send';\nimport StarIcon from '@material-ui/icons/Star';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ReportIcon from '@material-ui/icons/Report';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\n\nconst systemLabelIcons = {\n  all: MailIcon,\n  inbox: InboxIcon,\n  trash: DeleteIcon,\n  drafts: DraftsIcon,\n  spam: ReportIcon,\n  sent: SendIcon,\n  starred: StarIcon,\n  important: LabelImportantIcon\n};\n\nfunction getIcon(label) {\n  if (label.type === 'system_label') {\n    return systemLabelIcons[label.id];\n  }\n\n  return LabelIcon;\n}\n\nfunction getTo(label) {\n  const baseUrl = '/app/mail';\n\n  if (label.type === 'system_label') {\n    return `${baseUrl}/${label.id}`;\n  }\n\n  if (label.type === 'custom_label') {\n    return `${baseUrl}/label/${label.name}`;\n  }\n\n  return baseUrl;\n}\n\nfunction getColor(label) {\n  if (label.type === 'custom_label') {\n    return label.color;\n  }\n\n  return null;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 0\n  },\n  content: {\n    flexGrow: 1,\n    height: 36,\n    color: theme.palette.text.secondary,\n    borderTopRightRadius: 18,\n    borderBottomRightRadius: 18,\n    paddingRight: 18,\n    paddingLeft: 32,\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover\n    }\n  },\n  active: {\n    fontWeight: theme.typography.fontWeightMedium,\n    backgroundColor: theme.palette.action.selected\n  },\n  label: {\n    fontWeight: 'inherit',\n    color: 'inherit'\n  },\n  labelRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(1, 0)\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  text: {\n    fontWeight: 'inherit',\n    flexGrow: 1\n  }\n}));\n\nfunction LabelItem({ label, ...rest }) {\n  const classes = useStyles();\n\n  const Icon = getIcon(label);\n  const to = getTo(label);\n  const color = getColor(label);\n  const displayUnreadCount = Boolean(label.unreadCount && label.unreadCount > 0);\n\n  return (\n    <ListItem\n      className={classes.root}\n      {...rest}\n    >\n      <ButtonBase\n        activeClassName={classes.active}\n        component={RouterLink}\n        to={to}\n        className={classes.content}\n      >\n        <Icon\n          className={classes.icon}\n          color=\"inherit\"\n          style={{ color }}\n        />\n        <Typography\n          className={classes.text}\n          variant=\"body2\"\n        >\n          {label.name}\n        </Typography>\n        {displayUnreadCount && (\n          <Typography\n            color=\"inherit\"\n            variant=\"caption\"\n          >\n            {label.unreadCount}\n          </Typography>\n        )}\n      </ButtonBase>\n    </ListItem>\n  );\n}\n\nLabelItem.propTypes = {\n  label: PropTypes.object.isRequired,\n  children: PropTypes.any\n};\n\nexport default LabelItem;\n","/* eslint-disable no-use-before-define */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Drawer,\n  Hidden,\n  Box,\n  List,\n  Button,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport { closeSidebar, openNewMessage } from 'src/actions/mailActions';\nimport LabelItem from './LabelItem';\n\nconst useStyles = makeStyles(() => ({\n  drawerDesktopRoot: {\n    width: 280,\n    flexShrink: 0\n  },\n  drawerDesktopPaper: {\n    position: 'relative'\n  },\n  drawerMobilePaper: {\n    position: 'relative',\n    width: 280\n  },\n  drawerMobileBackdrop: {\n    position: 'absolute'\n  }\n}));\n\nfunction Sidebar({ containerRef }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { labels, sidebarOpen } = useSelector((state) => state.mail);\n\n  const handleCloseSidebar = () => {\n    dispatch(closeSidebar());\n  };\n\n  const handleComposeClick = () => {\n    dispatch(openNewMessage());\n  };\n\n  useEffect(() => {\n    if (sidebarOpen) {\n      dispatch(closeSidebar());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <div>\n      <Box\n        px={3}\n        py={2}\n      >\n        <Button\n          color=\"secondary\"\n          fullWidth\n          variant=\"contained\"\n          onClick={handleComposeClick}\n        >\n          Compose\n        </Button>\n      </Box>\n      <Divider />\n      <Box\n        py={2}\n        pr={2}\n      >\n        <List>\n          {labels.map((label) => (\n            <LabelItem\n              key={label.id}\n              label={label}\n            />\n          ))}\n        </List>\n      </Box>\n    </div>\n  );\n\n  return (\n    <>\n      <Hidden smDown>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            root: classes.drawerDesktopRoot,\n            paper: classes.drawerDesktopPaper\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdUp>\n        <Drawer\n          variant=\"temporary\"\n          open={sidebarOpen}\n          onClose={handleCloseSidebar}\n          classes={{\n            paper: classes.drawerMobilePaper\n          }}\n          style={{ position: 'absolute', zIndex: 1200 }}\n          BackdropProps={{ classes: { root: classes.drawerMobileBackdrop } }}\n          ModalProps={{ container: () => containerRef.current }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n}\n\nSidebar.propTypes = {\n  containerRef: PropTypes.any.isRequired\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport {\n  Box,\n  Checkbox,\n  Hidden,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip,\n  Typography,\n  makeStyles,\n  SvgIcon\n} from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport {\n  Search as SearchIcon,\n  Menu as MenuIcon\n} from 'react-feather';\nimport { openSidebar } from 'src/actions/mailActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(2),\n    height: 68,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchInput: {\n    marginLeft: theme.spacing(2),\n    flexGrow: 1\n  }\n}));\n\nfunction Toolbar({\n  className,\n  mails,\n  onDeselectAll,\n  onSelectAll,\n  selectedMails,\n  ...rest\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleOpenSidebar = () => {\n    dispatch(openSidebar());\n  };\n\n  const handleCheckboxChange = (event) => (event.target.checked ? onSelectAll() : onDeselectAll());\n\n  const selectedAllMails = selectedMails === mails && mails > 0;\n  const selectedSomeMails = selectedMails > 0 && selectedMails < mails;\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Hidden mdUp>\n        <IconButton onClick={handleOpenSidebar}>\n          <SvgIcon fontSize=\"small\">\n            <MenuIcon />\n          </SvgIcon>\n        </IconButton>\n      </Hidden>\n      <Hidden smDown>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Checkbox\n            checked={selectedAllMails}\n            className={classes.checkbox}\n            indeterminate={selectedSomeMails}\n            onChange={handleCheckboxChange}\n          />\n          <Typography\n            variant=\"h6\"\n            color=\"textPrimary\"\n          >\n            Select all\n          </Typography>\n        </Box>\n        <Box flexGrow={1} />\n        <Paper\n          component={Box}\n          display=\"flex\"\n          alignItems=\"center\"\n          variant=\"outlined\"\n          py={0.5}\n          px={1}\n        >\n          <SvgIcon\n            color=\"action\"\n            fontSize=\"small\"\n          >\n            <SearchIcon />\n          </SvgIcon>\n          <Input\n            className={classes.searchInput}\n            disableUnderline\n            placeholder=\"Search mail\"\n          />\n        </Paper>\n        <Tooltip title=\"Refresh\">\n          <IconButton>\n            <RefreshIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"More options\">\n          <IconButton>\n            <MoreIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Tooltip title=\"Next page\">\n            <IconButton>\n              <KeyboardArrowLeftIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          {mails > 0 && (\n            <>\n              <Typography\n                noWrap\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                1 -\n                {' '}\n                {mails}\n                {' '}\n                of\n                {' '}\n                {mails}\n              </Typography>\n              <Tooltip title=\"Previous page\">\n                <IconButton>\n                  <KeyboardArrowRightIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </>\n          )}\n        </Box>\n      </Hidden>\n    </div>\n  );\n}\n\nToolbar.propTypes = {\n  className: PropTypes.string,\n  mails: PropTypes.number.isRequired,\n  onDeselectAll: PropTypes.func,\n  onSelectAll: PropTypes.func,\n  selectedMails: PropTypes.number.isRequired\n};\n\nToolbar.defualtProps = {\n  onDeselectAll: () => {},\n  onSelectAll: () => {}\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Checkbox,\n  IconButton,\n  Hidden,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport LabelImportantOutlinedIcon from '@material-ui/icons/LabelImportantOutlined';\nimport getInitials from 'src/utils/getInitials';\nimport { useSelector } from 'react-redux';\n\nfunction getTo(params, mailId) {\n  const { systemLabel, customLabel } = params;\n  const baseUrl = '/app/mail';\n\n  if (systemLabel) {\n    return `${baseUrl}/${systemLabel}/${mailId}`;\n  }\n\n  if (customLabel) {\n    return `${baseUrl}/label/${customLabel}/${mailId}`;\n  }\n\n  return baseUrl;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(2),\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'center',\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover\n    }\n  },\n  unread: {\n    position: 'relative',\n    '&:before': {\n      content: '\" \"',\n      height: '100%',\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: 4,\n      backgroundColor: theme.palette.error.main\n    },\n    '& $name, & $subject': {\n      fontWeight: theme.typography.fontWeightBold\n    }\n  },\n  selected: {\n    backgroundColor: theme.palette.action.selected\n  },\n  filterActive: {\n    color: colors.amber[400]\n  },\n  content: {\n    cursor: 'pointer',\n    textDecoration: 'none'\n  },\n  details: {\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n      alignItems: 'center',\n      flexGrow: 1\n    }\n  },\n  name: {\n    [theme.breakpoints.up('md')]: {\n      minWidth: 180,\n      flexBasis: 180\n    }\n  },\n  subject: {\n    maxWidth: 400,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  },\n  message: {\n    maxWidth: 800,\n    flexGrow: 1,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    marginRight: 'auto'\n  },\n  label: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(12),\n    color: theme.palette.common.white,\n    paddingLeft: 4,\n    paddingRight: 4,\n    paddingTop: 2,\n    paddingBottom: 2,\n    borderRadius: 2,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  date: {\n    whiteSpace: 'nowrap'\n  }\n}));\n\nfunction MailItem({\n  className,\n  mail,\n  onDeselect,\n  onSelect,\n  selected,\n  ...rest\n}) {\n  const classes = useStyles();\n  const params = useParams();\n  const { labels } = useSelector((state) => state.mail);\n\n  const handleCheckboxChange = (event) => (event.target.checked ? onSelect() : onDeselect());\n\n  const handleStarToggle = () => {\n    // dispatch action\n  };\n\n  const handleImportantToggle = () => {\n    // dispatch action\n  };\n\n  const to = getTo(params, mail.id);\n\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        {\n          [classes.unread]: !mail.isUnread,\n          [classes.selected]: selected\n        },\n        className\n      )}\n      {...rest}\n    >\n      <Hidden smDown>\n        <Box\n          mr={1}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Checkbox\n            checked={selected}\n            onChange={handleCheckboxChange}\n          />\n          <Tooltip title=\"Starred\">\n            <IconButton onClick={handleStarToggle}>\n              {mail.isStarred ? (\n                <StarIcon className={classes.filterActive} />\n              ) : (\n                <StarBorderIcon />\n              )}\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Important\">\n            <IconButton onClick={handleImportantToggle}>\n              {mail.isImportant ? (\n                <LabelImportantIcon className={classes.filterActive} />\n              ) : (\n                <LabelImportantOutlinedIcon />\n              )}\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Hidden>\n      <Box\n        minWidth=\"1px\"\n        display=\"flex\"\n        flexGrow={1}\n        component={RouterLink}\n        to={to}\n        className={classes.content}\n      >\n        <Avatar src={mail.from.avatar}>\n          {getInitials(mail.from.name)}\n        </Avatar>\n        <Box\n          minWidth=\"1px\"\n          ml={1}\n          className={classes.details}\n        >\n          <Typography\n            variant=\"body2\"\n            color=\"textPrimary\"\n            className={classes.name}\n          >\n            {mail.from.name}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            className={classes.subject}\n          >\n            {mail.subject}\n          </Typography>\n          <Hidden smDown>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              className={classes.message}\n            >\n              <Box\n                component=\"span\"\n                ml={2}\n              >\n                -\n              </Box>\n              {mail.message}\n            </Typography>\n            {mail.labelIds.length > 0 && (\n              <Box\n                display=\"flex\"\n                mx={2}\n              >\n                {mail.labelIds.map((labelId) => {\n                  const label = labels.find((_label) => _label.id === labelId);\n\n                  if (!label) return null;\n\n                  return (\n                    <span\n                      style={{ backgroundColor: label.color }}\n                      key={label.id}\n                      className={classes.label}\n                    >\n                      {label.name}\n                    </span>\n                  );\n                })}\n              </Box>\n            )}\n          </Hidden>\n          <Typography\n            className={classes.date}\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            {moment(mail.createdAt).format('DD MMM YYYY')}\n          </Typography>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n\nMailItem.propTypes = {\n  className: PropTypes.string,\n  mail: PropTypes.object.isRequired,\n  onDeselect: PropTypes.func,\n  onSelect: PropTypes.func,\n  selected: PropTypes.bool.isRequired\n};\n\nexport default MailItem;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Divider, makeStyles } from '@material-ui/core';\nimport { getMails } from 'src/actions/mailActions';\nimport Toolbar from './Toolbar';\nimport MailItem from './MailItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.dark\n  }\n}));\n\nfunction MailList() {\n  const classes = useStyles();\n  const params = useParams();\n  const dispatch = useDispatch();\n  const { mails } = useSelector((state) => state.mail);\n  const [selectedMails, setSelectedMails] = useState([]);\n\n  const handleSelectAllMails = () => {\n    setSelectedMails(mails.map((mail) => mail.id));\n  };\n\n  const handleDeselectAllMails = () => {\n    setSelectedMails([]);\n  };\n\n  const handleSelectOneMail = (mailId) => {\n    setSelectedMails((prevSelectedMails) => {\n      if (!prevSelectedMails.includes(mailId)) {\n        return [...prevSelectedMails, mailId];\n      }\n\n      return prevSelectedMails;\n    });\n  };\n\n  const handleDeselectOneMail = (mailId) => {\n    setSelectedMails((prevSelectedMails) => prevSelectedMails.filter((id) => id !== mailId));\n  };\n\n  useEffect(() => {\n    dispatch(getMails(params));\n  }, [dispatch, params]);\n\n  return (\n    <div className={classes.root}>\n      <Toolbar\n        onDeselectAll={handleDeselectAllMails}\n        onSelectAll={handleSelectAllMails}\n        selectedMails={selectedMails.length}\n        mails={mails.allIds.length}\n      />\n      <Divider />\n      {mails.allIds.map((mailId) => (\n        <MailItem\n          mail={mails.byId[mailId]}\n          key={mailId}\n          onDeselect={() => handleDeselectOneMail(mailId)}\n          onSelect={() => handleSelectOneMail(mailId)}\n          selected={selectedMails.includes(mailId)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default MailList;\n","import React from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Hidden,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(2),\n    height: 68,\n    flexShrink: 0,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchInput: {\n    marginLeft: theme.spacing(2),\n    flexGrow: 1\n  }\n}));\n\nfunction Toolbar({ className, ...rest }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const { systemLabel, customLabel } = useParams();\n\n  const handleBack = () => {\n    if (systemLabel) {\n      return history.push(`/app/mail/${systemLabel}`);\n    }\n\n    if (customLabel) {\n      return history.push(`/app/mail/label/${customLabel}`);\n    }\n\n    return history.push('/app/mail/inbox');\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Tooltip title=\"Back\">\n        <IconButton onClick={handleBack}>\n          <ArrowBackIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Box flexGrow={1} />\n      <Hidden mdDown>\n        <Paper\n          component={Box}\n          display=\"flex\"\n          alignItems=\"center\"\n          variant=\"outlined\"\n          py={0.5}\n          px={1}\n          mr={2}\n        >\n          <SearchIcon color=\"action\" />\n          <Input\n            className={classes.searchInput}\n            disableUnderline\n            placeholder=\"Search message\"\n          />\n        </Paper>\n      </Hidden>\n      <Tooltip title=\"Previous mail\">\n        <IconButton>\n          <KeyboardArrowLeftIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Next mail\">\n        <IconButton>\n          <KeyboardArrowRightIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n    </div>\n  );\n}\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","import React, { useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  IconButton,\n  Paper,\n  TextareaAutosize,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  textarea: {\n    ...theme.typography.body1,\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.text.primary,\n    border: 'none',\n    outline: 'none',\n    resize: 'none',\n    width: '100%'\n  },\n  action: {\n    marginRight: theme.spacing(1)\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nfunction MailReply({ className, ...rest }) {\n  const classes = useStyles();\n  const { user } = useSelector((state) => state.account);\n  const fileInputRef = useRef(null);\n  const [value, setValue] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        className={classes.avatar}\n        src={user.avatar}\n      />\n      <Paper\n        component={Box}\n        flexGrow={1}\n        padding={2}\n        variant=\"outlined\"\n      >\n        <TextareaAutosize\n          className={classes.textarea}\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n          rows={3}\n          value={value}\n        />\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.action}\n          >\n            Send\n          </Button>\n          <Tooltip title=\"Attach image\">\n            <IconButton\n              size=\"small\"\n              className={classes.action}\n              onClick={handleAttach}\n            >\n              <AddPhotoIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Attach file\">\n            <IconButton\n              size=\"small\"\n              className={classes.action}\n              onClick={handleAttach}\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Paper>\n      <input\n        className={classes.fileInput}\n        ref={fileInputRef}\n        type=\"file\"\n      />\n    </div>\n  );\n}\n\nMailReply.propTypes = {\n  className: PropTypes.string\n};\n\nexport default MailReply;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport Markdown from 'react-markdown/with-html';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  IconButton,\n  Link,\n  Tooltip,\n  Typography,\n  makeStyles,\n  Hidden\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport ReplyIcon from '@material-ui/icons/ReplyOutlined';\nimport ReplyAllIcon from '@material-ui/icons/ReplyAllOutlined';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport getInitials from 'src/utils/getInitials';\nimport { getMail } from 'src/actions/mailActions';\nimport Toolbar from './Toolbar';\nimport MailReply from './MailReply';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    flexDirection: 'column',\n    overflowY: 'auto'\n  },\n  avatar: {\n    height: 56,\n    width: 56\n  },\n  date: {\n    whiteSpace: 'nowrap'\n  },\n  message: {\n    color: theme.palette.text.secondary,\n    '& > p': {\n      ...theme.typography.body1,\n      marginBottom: theme.spacing(2)\n    }\n  }\n}));\n\nfunction MailDetails() {\n  const classes = useStyles();\n  const { mailId } = useParams();\n  const dispatch = useDispatch();\n  const mail = useSelector((state) => state.mail.mails.byId[mailId]);\n\n  useEffect(() => {\n    dispatch(getMail(mailId));\n  }, [dispatch, mailId]);\n\n  if (!mail) {\n    return null;\n  }\n\n  return (\n    <div className={classes.root}>\n      <Toolbar />\n      <Divider />\n      <Box\n        p={3}\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        flexShrink={0}\n      >\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={mail.from.avatar}\n          >\n            {getInitials(mail.from.name)}\n          </Avatar>\n          <Box ml={2}>\n            <Typography\n              display=\"inline\"\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              {mail.from.name}\n            </Typography>\n            {' '}\n            <Link\n              color=\"textSecondary\"\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              {mail.from.email}\n            </Link>\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textSecondary\"\n            >\n              To:\n              {' '}\n              {mail.to.map((person) => (\n                <Link\n                  color=\"inherit\"\n                  key={person.email}\n                >\n                  {person.email}\n                </Link>\n              ))}\n            </Typography>\n            <Typography\n              className={classes.date}\n              color=\"textSecondary\"\n              variant=\"caption\"\n            >\n              {moment(mail.createdAt).format('MMMM Do YYYY, h:mm:ss a')}\n            </Typography>\n          </Box>\n        </Box>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Hidden smDown>\n            <Tooltip title=\"Reply\">\n              <IconButton>\n                <ReplyIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Reply all\">\n              <IconButton>\n                <ReplyAllIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Delete\">\n              <IconButton>\n                <DeleteIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          </Hidden>\n          <Tooltip title=\"More options\">\n            <IconButton>\n              <MoreIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n      <Divider />\n      <Box\n        flexGrow={1}\n        py={6}\n        px={3}\n        bgcolor=\"background.dark\"\n      >\n        <Typography\n          variant=\"h1\"\n          color=\"textPrimary\"\n        >\n          {mail.subject}\n        </Typography>\n        <Box mt={2}>\n          <Markdown\n            source={mail.message}\n            className={classes.message}\n          />\n        </Box>\n      </Box>\n      <Divider />\n      <MailReply />\n    </div>\n  );\n}\n\nexport default MailDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ReactQuill from 'react-quill';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .ql-toolbar': {\n      borderLeft: 'none',\n      borderTop: 'none',\n      borderRight: 'none',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      '& .ql-picker-label:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-label.ql-active': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item.ql-selected': {\n        color: theme.palette.secondary.main\n      },\n      '& button:hover': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button:focus': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button.ql-active': {\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& .ql-stroke': {\n        stroke: theme.palette.text.primary\n      },\n      '& .ql-picker': {\n        color: theme.palette.text.primary\n      },\n      '& .ql-picker-options': {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n        border: 'none',\n        boxShadow: theme.shadows[10],\n        borderRadius: theme.shape.borderRadius\n      }\n    },\n    '& .ql-container': {\n      border: 'none',\n      '& .ql-editor': {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: 16,\n        color: theme.palette.text.primary,\n        '&.ql-blank::before': {\n          color: theme.palette.text.secondary\n        }\n      }\n    }\n  },\n  stepButton: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nfunction QuillEditor({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <ReactQuill\n      className={clsx(classes.root, className)}\n      {...rest}\n    />\n  );\n}\n\nQuillEditor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default QuillEditor;\n","import React, { useState } from 'react';\nimport {\n  useSelector,\n  useDispatch\n} from 'react-redux';\nimport {\n  Backdrop,\n  Box,\n  Button,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Portal,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport {\n  X as XIcon,\n  Maximize as MaximizeIcon,\n  Minimize as MinimizeIcon\n} from 'react-feather';\nimport { closeNewMessage } from 'src/actions/mailActions';\nimport QuillEditor from 'src/components/QuillEditor';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: `calc(100% - ${theme.spacing(6)}px)`,\n    maxHeight: `calc(100% - ${theme.spacing(6)}px)`,\n    width: 600,\n    position: 'fixed',\n    bottom: 0,\n    right: 0,\n    margin: theme.spacing(3),\n    outline: 'none',\n    zIndex: 2000,\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: 500\n  },\n  fullScreen: {\n    height: '100%',\n    width: '100%'\n  },\n  input: {\n    width: '100%'\n  },\n  editor: {\n    flexGrow: 1,\n    '& .ql-editor': {\n      minHeight: 300\n    }\n  },\n  action: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction MailNew() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { newMessageOpen } = useSelector((state) => state.mail);\n  const [fullScreen, setFullScreen] = useState(false);\n  const [messageBody, setMessageBody] = useState('');\n\n  const handleChange = (value) => {\n    setMessageBody(value);\n  };\n\n  const handleExitFullScreen = () => {\n    setFullScreen(false);\n  };\n\n  const handleEnterFullScreen = () => {\n    setFullScreen(true);\n  };\n\n  const handleClose = () => {\n    dispatch(closeNewMessage());\n  };\n\n  if (!newMessageOpen) {\n    return null;\n  }\n\n  return (\n    <Portal>\n      <Backdrop open={fullScreen} />\n      <Paper\n        className={clsx(\n          classes.root,\n          { [classes.fullScreen]: fullScreen }\n        )}\n        elevation={12}\n      >\n        <Box\n          bgcolor=\"background.dark\"\n          display=\"flex\"\n          alignItems=\"center\"\n          py={1}\n          px={2}\n        >\n          <Typography\n            variant=\"h5\"\n            color=\"textPrimary\"\n          >\n            New Message\n          </Typography>\n          <Box flexGrow={1} />\n          {fullScreen ? (\n            <IconButton onClick={handleExitFullScreen}>\n              <SvgIcon fontSize=\"small\">\n                <MinimizeIcon />\n              </SvgIcon>\n            </IconButton>\n          ) : (\n            <IconButton onClick={handleEnterFullScreen}>\n              <SvgIcon fontSize=\"small\">\n                <MaximizeIcon />\n              </SvgIcon>\n            </IconButton>\n          )}\n          <IconButton onClick={handleClose}>\n            <SvgIcon fontSize=\"small\">\n              <XIcon />\n            </SvgIcon>\n          </IconButton>\n        </Box>\n        <Box p={2}>\n          <Input\n            className={classes.input}\n            disableUnderline\n            placeholder=\"To\"\n          />\n          <Input\n            className={classes.input}\n            disableUnderline\n            placeholder=\"Subject\"\n          />\n        </Box>\n        <Divider />\n        <QuillEditor\n          className={classes.editor}\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n          value={messageBody}\n        />\n        <Divider />\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          py={1}\n          px={2}\n        >\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.action}\n          >\n            Send\n          </Button>\n          <Tooltip title=\"Attach image\">\n            <IconButton\n              size=\"small\"\n              className={classes.action}\n            >\n              <AddPhotoIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Attach file\">\n            <IconButton\n              size=\"small\"\n              className={classes.action}\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Paper>\n    </Portal>\n  );\n}\n\nexport default MailNew;\n","import React, {\n  useEffect,\n  useRef\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { getLabels } from 'src/actions/mailActions';\nimport Sidebar from './Sidebar';\nimport MailList from './MailList';\nimport MailDetails from './MailDetails';\nimport MailNew from './MailNew';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    overflow: 'hidden',\n    position: 'relative'\n  }\n}));\n\nfunction MailView() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { mailId } = useParams();\n  const pageRef = useRef(null);\n\n  useEffect(() => {\n    dispatch(getLabels());\n  }, [dispatch]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Mail\"\n      ref={pageRef}\n    >\n      <Sidebar containerRef={pageRef} />\n      {mailId ? <MailDetails /> : <MailList />}\n      <MailNew />\n    </Page>\n  );\n}\n\nexport default MailView;\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n"],"sourceRoot":""}