{"version":3,"sources":["views/calendar/CalendarView/Header.js","views/calendar/CalendarView/Toolbar.js","views/calendar/CalendarView/AddEditEventModal/AddEditEventForm.js","views/calendar/CalendarView/AddEditEventModal/index.js","views/calendar/CalendarView/index.js","hooks/useIsMountedRef.js","utils/wait.js"],"names":["useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","actionIcon","marginRight","Header","className","onEventAdd","rest","classes","Grid","clsx","container","justify","item","Typography","variant","color","Button","onClick","SvgIcon","fontSize","defaultProps","viewOptions","label","value","icon","ViewConfigIcon","ViewWeekIcon","Toolbar","date","view","onDatePrev","onDateNext","onViewChange","onDateToday","alignItems","ButtonGroup","size","Hidden","smDown","moment","format","map","viewOption","Icon","Tooltip","key","title","IconButton","confirmButton","AddEditEventForm","event","mode","onAdd","onCancel","onDelete","onEdit","enqueueSnackbar","useSnackbar","user","useSelector","state","account","subscriptores","suscriptors","GenerateTemplate","role","initialValues","start","id","_id","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","data","wait","axios","patch","process","then","success","status","console","log","catch","error","response","username","submit","message","errors","handleSubmit","isSubmitting","setFieldTouched","setFieldValue","touched","Box","p","align","gutterBottom","mt","DateTimePicker","fullWidth","inputVariant","name","onChange","minutesStep","disablePast","readOnly","List","dense","Object","l","i","ListItem","button","ListItemAvatar","Avatar","avatar","src","ListItemText","primary","Boolean","end","FormHelperText","Divider","display","flexGrow","type","disabled","limit","validationSchema","Yup","shape","max","token","window","localStorage","getItem","date_S","Date","date_E","getTime","post","headers","accessToken","handleBlur","handleChange","TextField","helperText","onBlur","AddEditEventModal","open","Dialog","maxWidth","onClose","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","calendar","contentHeight","height","borderColor","divider","default","typography","body2","body1","h6","subtitle2","fontWeight","fontWeightMedium","text","secondary","padding","main","contrastText","borderWidth","opacity","subtitle1","CalendarView","calendarRef","useRef","isMountedRef","useIsMountedRef","useTheme","mobileDevice","useMediaQuery","breakpoints","down","useState","setView","toDate","setDate","events","setEvents","modal","setModal","resetModal","getEvents","useCallback","get","result","current","useEffect","calendarEl","getApi","changeView","Page","Container","description","add","calendarApi","next","getDate","prev","today","newView","Paper","component","defaultDate","defaultView","droppable","editable","eventClick","arg","find","e","_def","extendedProps","eventDrop","droped","now","prevEvents","prevEvent","parse","eventLimit","eventResizableFromStart","eventResize","hours","resize","header","weight","ref","rerenderDelay","select","unselect","selectable","weekends","allDaySlot","slotDuration","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","timelinePlugin","eventId","delete","isMounted","time","Promise","res","setTimeout"],"mappings":"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","file":"static/js/15.0d41d8fd.chunk.js","sourcesContent":["import React from 'react';\n// import { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  // Breadcrumbs,\n  Grid,\n  // Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n// import NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { PlusCircle as PlusCircleIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({\n  className,\n  onEventAdd,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        {/* <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Calendar\n          </Typography>\n        </Breadcrumbs> */}\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Here&apos;s what you planned\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={onEventAdd}\n          className={classes.action}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <PlusCircleIcon />\n          </SvgIcon>\n          New Socket\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  onEventAdd: PropTypes.func\n};\n\nHeader.defaultProps = {\n  onEventAdd: () => {}\n};\n\nexport default Header;\n","import React from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ButtonGroup,\n  Grid,\n  Hidden,\n  IconButton,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport ViewConfigIcon from '@material-ui/icons/ViewComfyOutlined';\nimport ViewWeekIcon from '@material-ui/icons/ViewWeekOutlined';\n// import ViewDayIcon from '@material-ui/icons/ViewDayOutlined';\n// import ViewAgendaIcon from '@material-ui/icons/ViewAgendaOutlined';\n\nconst viewOptions = [\n  {\n    label: 'Month',\n    value: 'dayGridMonth',\n    icon: ViewConfigIcon\n  },\n  {\n    label: 'Week',\n    value: 'timeGridWeek',\n    icon: ViewWeekIcon\n  },\n  // {\n  //   label: 'Day',\n  //   value: 'timeGridDay',\n  //   icon: ViewDayIcon\n  // },\n  // {\n  //   label: 'Agenda',\n  //   value: 'listWeek',\n  //   icon: ViewAgendaIcon\n  // }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Toolbar({\n  date,\n  view,\n  onDatePrev,\n  onDateNext,\n  onEventAdd,\n  onViewChange,\n  onDateToday,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      {...rest}\n      alignItems=\"center\"\n      container\n      justify=\"space-between\"\n      spacing={3}\n    >\n      <Grid item>\n        <ButtonGroup size=\"small\">\n          <Button onClick={onDatePrev}>Prev</Button>\n          <Button onClick={onDateToday}>Today</Button>\n          <Button onClick={onDateNext}>Next</Button>\n        </ButtonGroup>\n      </Grid>\n      <Hidden smDown>\n        <Grid item>\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {moment(date).format('MMMM YYYY')}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {viewOptions.map((viewOption) => {\n            const Icon = viewOption.icon;\n\n            return (\n              <Tooltip\n                key={viewOption.value}\n                title={viewOption.label}\n              >\n                <IconButton\n                  color={viewOption.value === view ? 'secondary' : 'default'}\n                  onClick={() => onViewChange(viewOption.value)}\n                >\n                  <Icon />\n                </IconButton>\n              </Tooltip>\n            );\n          })}\n        </Grid>\n      </Hidden>\n    </Grid>\n  );\n}\n\nToolbar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  date: PropTypes.any.isRequired,\n  onDateNext: PropTypes.func,\n  onDatePrev: PropTypes.func,\n  onDateToday: PropTypes.func,\n  onEventAdd: PropTypes.func,\n  onViewChange: PropTypes.func,\n  view: PropTypes.string.isRequired\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport { useSelector } from 'react-redux';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  IconButton,\n  Divider,\n  FormHelperText,\n  SvgIcon,\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar\n} from '@material-ui/core';\nimport { DateTimePicker } from '@material-ui/pickers';\nimport { Trash as TrashIcon } from 'react-feather';\nimport wait from 'src/utils/wait';\nimport axios from 'src/utils/axios';\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  confirmButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction AddEditEventForm({\n  event,\n  mode,\n  onAdd,\n  onCancel,\n  onDelete,\n  onEdit\n}) {\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useSelector((state) => state.account);\n  const subscriptores = event.suscriptors || []\n  const classes = useStyles();\n  \n  const GenerateTemplate = () => {\n    if (user.role === 'USER_ROLE') {\n      return (\n          <Formik\n            initialValues={{\n              start: event.start || 852076800000,\n              id: event._id || null,\n            }}\n            onSubmit={async (values, {\n              resetForm,\n              setErrors,\n              setStatus,\n              setSubmitting\n            }) => {\n              try {\n                const data = {\n                  ...values\n                };\n                // console.log(data);\n                // Make API request depending on mode type\n                // If editting an event, here should make a patch request\n                // else a post request\n                await wait(200);\n\n                // On post request server should return an ID\n                if (mode === 'edit') {\n                  axios.patch(`${process.env.REACT_APP_LOCALHOST}/calendar/events/${data.id}`)\n                    .then(function (success) {\n                      if (success.status === 200 || 201) {\n                        console.log(success)\n                        enqueueSnackbar('Sub success', {\n                                        variant: 'success'\n                          });\n                      }\n                    })\n                    .catch(function (error) {\n                      if (error.response) {\n                        enqueueSnackbar(`You are already subscribe, ${user.username}!`, {\n                                        variant: 'error'\n                          });\n                      }\n                    });\n                } else {\n                  enqueueSnackbar(`Can't do this, ${user.username}!`, {\n                                  variant: 'error'\n                  }\n                );\n                }\n                resetForm();\n                setStatus({ success: true });\n                setSubmitting(false);\n\n                if (mode === 'edit') {\n                  onEdit(data);\n                }\n              } catch (error) {\n                setStatus({ success: false });\n                setErrors({ submit: error.message });\n                setSubmitting(false);\n                enqueueSnackbar('Can\\'t save nothing', {\n                  variant: 'error'\n                });\n              }\n            }}\n          >\n            {({\n              errors,\n              handleSubmit,\n              isSubmitting,\n              setFieldTouched,\n              setFieldValue,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box p={3}>\n                  <Typography\n                    align=\"center\"\n                    gutterBottom\n                    variant=\"h3\"\n                    color=\"textPrimary\"\n                  >\n                    {mode === 'edit' ? 'Subscribe 😀' : 'Subscribe 😀'}\n                  </Typography>\n                </Box>\n                <Box p={3}>\n                  <Box mt={2}>\n                    <DateTimePicker\n                      fullWidth\n                      inputVariant=\"outlined\"\n                      label=\"Date\"\n                      name=\"start\"\n                      onClick={() => setFieldTouched('end')}\n                      onChange={(date) => setFieldValue('start', date)}\n                      value={values.start}\n                      minutesStep={60}\n                      disablePast='false'\n                      readOnly={true}\n                    />\n                  </Box>\n                  <Box mt={2}>\n                    <List dense className={classes.root}>\n                      {\n                        Object.values(subscriptores).map((l, i) => (\n                          <ListItem key={i} button>\n                            <ListItemAvatar>\n                              <Avatar className={classes.avatar} src={l.avatar} />\n                            </ListItemAvatar>\n                          <ListItemText primary={`${l.username} has suscribed`} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Box>\n                  {Boolean(touched.end && errors.end) && (\n                    <Box mt={2}>\n                      <FormHelperText error>\n                        {errors.end}\n                      </FormHelperText>\n                    </Box>\n                  )}\n                </Box>\n                <Divider />\n                <Box\n                  p={2}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                >\n                  {mode === 'edit' && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      className={classes.confirmButton}\n                      onClick={() => onDelete(event._id)}\n                    >\n                      UnSubscribe\n                    </Button>\n                  )}\n                  <Box flexGrow={1} />\n                  <Button onClick={onCancel}>\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                    color=\"secondary\"\n                    className={classes.confirmButton}\n                  >\n                    Subscribe\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Formik>\n        );\n    }\n    else {\n      return (\n          <Formik\n            initialValues={{\n              color: event.color || '',\n              limit: event.limit || '',\n              end: event.end || moment(),\n              start: event.start || 852076800000,\n              title: event.title || '',\n              id: event._id || null,\n            }}\n            validationSchema={Yup.object().shape({\n              limit: Yup.string().max(3),\n            })}\n            onSubmit={async (values, {\n              resetForm,\n              setErrors,\n              setStatus,\n              setSubmitting\n            }) => {\n              try {\n                const data = {\n                  ...values\n                };\n                console.log(data);\n                // Make API request depending on mode type\n                // If editting an event, here should make a patch request\n                // else a post request\n                await wait(200);\n\n                // On post request server should return an ID\n                const token = 'Bearer ' + window.localStorage.getItem('accessToken');\n                if (mode === 'add') {\n                  const date_S = new Date(data.start);\n                  const date_E = new Date(data.end);\n                  console.log(data.start);\n                  data.start = date_S.getTime();\n                  data.end = date_E.getTime();\n                  console.log(data.limit)\n                  axios.post(`${process.env.REACT_APP_LOCALHOST}/calendar/events`, data, { headers: { accessToken: token } })\n                    .then(function (success) {\n                      if (success.status === 200 || 201) {\n                        console.log(success)\n                        enqueueSnackbar('Save Success', {\n                                        variant: 'success'\n                          });\n                      }\n                    })\n                    .catch(function (error) {\n                      if (error.response) {\n                        enqueueSnackbar(`Can't do this, ${user.username}!`, {\n                                        variant: 'error'\n                          });\n                      }\n                    });\n                } else {\n                  console.log(data.start);\n                  axios.patch(`${process.env.REACT_APP_LOCALHOST}/calendar/events`, data, {headers: {accessToken: token}})\n                    .then(function (success) {\n                      if (success.status === 200 || 201) {\n                        console.log(success)\n                        enqueueSnackbar('Save Success', {\n                                        variant: 'success'\n                          });\n                      }\n                    })\n                    .catch(function (error) {\n                      if (error.response) {\n                        enqueueSnackbar(`Can't do this, ${user.username}!`, {\n                                        variant: 'error'\n                          });\n                      }\n                    });\n                }\n                resetForm();\n                setStatus({ success: true });\n                setSubmitting(false);\n\n                if (mode === 'add') {\n                  onAdd(data);\n                } else {\n                  onEdit(data);\n                }\n              } catch (error) {\n                setStatus({ success: false });\n                setErrors({ submit: error.message });\n                setSubmitting(false);\n                enqueueSnackbar('Can\\'t save nothing', {\n                  variant: 'error'\n                });\n              }\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              setFieldTouched,\n              setFieldValue,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box p={3}>\n                  <Typography\n                    align=\"center\"\n                    gutterBottom\n                    variant=\"h3\"\n                    color=\"textPrimary\"\n                  >\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    gutterBottom\n                    variant=\"h3\"\n                    color=\"textPrimary\"\n                  >\n                    {mode === 'add' ? 'Add block hour ⏰' : 'Edit block hour ⏰'}\n                  </Typography>\n                </Box>\n                <Box p={3}>\n                  <Box mt={2}>\n                    <TextField\n                      error={Boolean(touched.limit && errors.limit)}\n                      fullWidth\n                      helperText={touched.limit && errors.limit}\n                      label=\"Limit\"\n                      name=\"limit\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      variant=\"outlined\"\n                    />\n                  </Box>\n                  <Box mt={2}>\n                  </Box>\n                  <Box mt={2}>\n                    <DateTimePicker\n                      fullWidth\n                      inputVariant=\"outlined\"\n                      label=\"Socket Start\"\n                      name=\"start\"\n                      onClick={() => setFieldTouched('end')}\n                      onChange={(date) => setFieldValue('start', date)}\n                      value={values.start}\n                      minutesStep={60}\n                      disablePast= 'false'\n                    />\n                  </Box>\n                  <Box mt={2}>\n                    <List dense className={classes.root}>\n                      {\n                        Object.values(subscriptores).map((l, i) => (\n                          <ListItem key={i} button>\n                            <ListItemAvatar>\n                              <Avatar className={classes.avatar} src={l.avatar} />\n                            </ListItemAvatar>\n                          <ListItemText primary={`${l.username} has suscribed`} />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Box>\n                  {Boolean(touched.end && errors.end) && (\n                    <Box mt={2}>\n                      <FormHelperText error>\n                        {errors.end}\n                      </FormHelperText>\n                    </Box>\n                  )}\n                </Box>\n                <Divider />\n                <Box\n                  p={2}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                >\n                  {mode === 'edit' && (\n                    <IconButton onClick={() => onDelete(event._id)}>\n                      <SvgIcon>\n                        <TrashIcon />\n                      </SvgIcon>\n                    </IconButton>\n                  )}\n                  <Box flexGrow={1} />\n                  <Button onClick={onCancel}>\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                    color=\"secondary\"\n                    className={classes.confirmButton}\n                  >\n                    Confirm\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Formik>\n        );\n    }\n  }\n  return <GenerateTemplate/>\n\n}\n\nAddEditEventForm.propTypes = {\n  event: PropTypes.object,\n  mode: PropTypes.oneOf(['add', 'edit']).isRequired,\n  onAdd: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func\n};\n\nAddEditEventForm.defaultProps = {\n  event: {},\n  onAdd: () => {},\n  onCancel: () => {},\n  onDelete: () => {},\n  onEdit: () => {}\n};\n\nexport default AddEditEventForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog } from '@material-ui/core';\nimport AddEditEventForm from './AddEditEventForm';\n\nfunction AddEditEventModal({\n  event,\n  mode,\n  onAdd,\n  onCancel,\n  onDelete,\n  onEdit,\n  open,\n  ...rest\n}) {\n  return (\n    <Dialog\n      maxWidth=\"sm\"\n      fullWidth\n      onClose={onCancel}\n      open={open}\n      {...rest}\n    >\n      {/* Dialog renders its body even if not open */}\n      {open && (\n        <AddEditEventForm\n          event={event}\n          mode={mode}\n          onAdd={onAdd}\n          onCancel={onCancel}\n          onDelete={onDelete}\n          onEdit={onEdit}\n        />\n      )}\n    </Dialog>\n  );\n}\n\nAddEditEventModal.propTypes = {\n  event: PropTypes.object,\n  mode: PropTypes.oneOf(['add', 'edit']),\n  onAdd: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func,\n  open: PropTypes.bool\n};\n\nAddEditEventModal.defaultProps = {\n  event: {},\n  onAdd: () => {},\n  onCancel: () => {},\n  onDelete: () => {},\n  onEdit: () => {},\n  open: false\n};\n\nexport default AddEditEventModal;\n","import React, {\n  useCallback,\n  useState,\n  useRef,\n  useEffect\n} from 'react';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport timelinePlugin from '@fullcalendar/timeline';\nimport { useSnackbar } from 'notistack';\nimport { useSelector } from 'react-redux';\nimport {\n  Box,\n  Container,\n  Paper,\n  useTheme,\n  useMediaQuery,\n  makeStyles\n} from '@material-ui/core';\nimport '@fullcalendar/core/main.css';\nimport '@fullcalendar/daygrid/main.css';\nimport '@fullcalendar/timegrid/main.css';\nimport '@fullcalendar/list/main.css';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Toolbar from './Toolbar';\nimport AddEditEventModal from './AddEditEventModal';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  calendar: {\n    \n    '& .fc-unthemed .fc-list-item:hover td': {\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-time-grid .fc-slats td': {\n      contentHeight: 'auto',\n      height: '3em'\n    },\n    '& .fc-unthemed .fc-divider': {\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-unthemed .fc-popover .fc-header': {\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-unthemed .fc-list-heading td': {\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-unthemed th': {\n      borderColor: theme.palette.divider\n    },\n    '& .fc-unthemed td': {\n      borderColor: theme.palette.divider\n    },\n    '& .fc-unthemed td.fc-today': {\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-head': {\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-body': {\n      backgroundColor: theme.palette.background.default\n    },\n    '& .fc-axis': {\n      ...theme.typography.body2\n    },\n    '& .fc-list-item-time': {\n      ...theme.typography.body2\n    },\n    '& .fc-list-item-title': {\n      ...theme.typography.body1\n    },\n    '& .fc-list-heading-main': {\n      ...theme.typography.h6\n    },\n    '& .fc-list-heading-alt': {\n      ...theme.typography.h6\n    },\n    '& .fc th': {\n      borderColor: theme.palette.divider\n    },\n    '& .fc-day-header': {\n      ...theme.typography.subtitle2,\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary,\n      padding: theme.spacing(1),\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-day-top': {\n      ...theme.typography.body2\n    },\n    '& .fc-highlight': {\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-event': {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText,\n      borderWidth: 2,\n      opacity: 0.9,\n      '& .fc-time': {\n        ...theme.typography.h6,\n        color: 'inherit'\n      },\n      '& .fc-title': {\n        ...theme.typography.body1,\n        color: 'inherit'\n      }\n    },\n    '& .fc-list-empty': {\n      ...theme.typography.subtitle1\n    }\n  }\n}));\n\nfunction CalendarView() {\n  const classes = useStyles();\n  const calendarRef = useRef(null);\n  const isMountedRef = useIsMountedRef();\n  const theme = useTheme();\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n  const [view, setView] = useState(mobileDevice ? 'dayGridMonth' : 'dayGridMonth');\n  const [date, setDate] = useState(moment().toDate());\n  const [events, setEvents] = useState(null);\n  const [modal, setModal] = useState({\n    event: null,\n    mode: null,\n    open: false\n  });\n\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useSelector((state) => state.account);\n  const resetModal = () => {\n    setModal({\n      event: null,\n      mode: null,\n      open: false\n    });\n  };\n\n  const handleDateToday = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.today();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleViewChange = (newView) => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  };\n\n  const handleDatePrev = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.prev();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleDateNext = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.next();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleEventAddClick = () => {\n    setModal({\n      mode: 'add',\n      open: true,\n      event: {\n        description: '',\n        end: moment().add(30, 'minutes').toDate(),\n        start: moment().toDate(),\n        title: '',\n        _id: '',\n      }\n    });\n  };\n\n  const handleSlotsSelect = (arg) => {\n    if (user.role === 'ADMIN_ROLE') {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.unselect();\n    }\n\n    setModal({\n      event: {\n        _id: arg._id,\n        description: '',\n        end: arg.end,\n        start: arg.start,\n        title: ''\n      },\n      mode: 'add',\n      open: true\n    });\n    }\n  };\n\n  const handleEventAdd = (event) => {\n    setEvents((prevEvents) => [...prevEvents, event]);\n    resetModal();\n    setEvents(getEvents());\n    getEvents();\n  };\n\n  const handleEventDelete = (eventId) => {\n    // console.log(eventId)\n    // eventId = events.find((e) => e._id === eventId);\n    //console.log(eventId)\n    const token = 'Bearer ' + window.localStorage.getItem('accessToken');\n    if (user.role === 'ADMIN_ROLE') {\n      axios.delete(`${process.env.REACT_APP_LOCALHOST}/calendars/events`, { data: { _id: eventId }, headers: { accessToken: token } })\n      .then(function (success) {\n        if (success.status === 200 || 201) {\n          enqueueSnackbar('Delete Success', {\n            variant: 'success',\n          });\n        }\n      })\n      .catch(function (error) {\n        if (error.response) {\n          enqueueSnackbar(`Can't Delete this, ${user.username}!`, {\n            variant: 'error'\n          });\n        }\n      });\n    } else {\n      console.log(user.role);\n      axios.delete(`${process.env.REACT_APP_LOCALHOST}/calendars/events/${eventId}`)\n      .then(function (success) {\n        if (success.status === 200 || 201) {\n          console.log(success)\n          enqueueSnackbar('Unsub success', {\n                          variant: 'success'\n            });\n        }\n      })\n      .catch(function (error) {\n        if (error.response) {\n          enqueueSnackbar(`You are already unsubscribed, ${user.username}!`, {\n                          variant: 'error'\n            });\n        }\n      });\n    }\n    resetModal();\n    setEvents(getEvents());\n    getEvents();\n  };\n\n  const handleEventSelect = (arg) => {\n    const token = 'Bearer ' + window.localStorage.getItem('accessToken');\n    axios.get(`${process.env.REACT_APP_LOCALHOST}/accounts/me`, {headers: {accessToken: token}})\n    .then(response => {\n        const event = events.find((e) => e._id === arg.event._def.extendedProps._id);\n        setModal({\n          event: {...event},\n          mode: 'edit',\n          open: true\n        });\n      }\n    ).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleEventEdit = (event) => {\n    setEvents((prevEvents) => prevEvents.map((prevEvent) => (\n      prevEvent._id === event._id ? event : prevEvent\n    )));\n    resetModal();\n    getEvents();\n  };\n\n  const handleEventResize = ({ event }) => {\n    // Call API to update the event in database\n    const hour = 3600000;\n    let hours = (event.end - event.start) / 3600000;\n    console.log(hours);\n    const token = 'Bearer ' + window.localStorage.getItem('accessToken');\n    for (let i = (Date.parse(event.start) + hour); i < Date.parse(event.end); i+= hour) {\n      const resize = {\n        limit: event._def.extendedProps.limit,\n        start: i, // zi\n      };\n      \n      axios.post(`${process.env.REACT_APP_LOCALHOST}/calendars/events`, resize, { headers: { accessToken: token } })\n        .then(function (success) {\n          if (i === Date.parse(event.end) - hour) {\n            if (success.status === 200 || 201) {\n              enqueueSnackbar(`Resize Success hours created: ${hours}`, {\n                variant: 'success',\n              });\n            }\n          }\n        })\n        .catch(function (error) {\n          if (i === Date.parse(event.end) - hour) {\n            if (error.response) {\n              enqueueSnackbar(`Can't resize this, ${user.username}!`, {\n                variant: 'error'\n              });\n            }\n          }\n        });\n    }\n    setEvents(getEvents());\n    getEvents();\n  };\n\n  const handleEventDrop = ({ event }) => {\n    // If you add a droppable area, check if event dropped inside or outside of calendar\n    // Call API to update the event in database\n    const droped = {\n      id: event._def.extendedProps._id,\n      start: event.start\n    };\n    const token = 'Bearer ' + window.localStorage.getItem('accessToken');\n    //console.log(event.start);\n    if (event.start > Date.now()) {\n      axios.patch(`${process.env.REACT_APP_LOCALHOST}/calendars/events`, droped, { headers: { accessToken: token } })\n      .then(function (success) {\n        if (success.status === 200 || 201) {\n          enqueueSnackbar('Edit Success', {\n                          variant: 'success'\n            });\n        }\n      })\n      .catch(function (error) {\n        if (error.response) {\n          enqueueSnackbar(`Can't edit this, ${user.username}`, {\n                          variant: 'error'\n            });\n        }\n      });\n    } else {\n      enqueueSnackbar(`Can't edit this, ${user.username}`, {\n        variant: 'error'\n      });\n    }\n    \n    setEvents((prevEvents) => prevEvents.map((prevEvent) => (prevEvent._id === event._id ? ({\n      ...prevEvent,\n      start: Date.parse(event.start),\n      end: (Date.parse(event.start) + 3600000),\n    }) : prevEvent)));\n    //console.log(event);\n    setEvents(getEvents());\n    getEvents();\n  };\n\n  const handleModalClose = () => {\n    resetModal();\n  };\n\n  const getEvents = useCallback(async () => {\n    const token = 'Bearer ' + window.localStorage.getItem('accessToken');\n    //console.log(token);\n    const result = await axios.get(`${process.env.REACT_APP_LOCALHOST}/calendars`,{headers: {accessToken: token}})\n    \n    if (isMountedRef.current) {\n      setEvents(result.data.events);\n    }\n      \n    }, [isMountedRef]);\n\n  useEffect(() => {\n    getEvents();\n  }, [getEvents]);\n\n  useEffect(() => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      const newView = mobileDevice ? 'timeGridWeek' : 'timeGridWeek';\n\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  }, [mobileDevice]);\n\n  if (!events) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Calendar\"\n    >\n      <Container maxWidth={false}>\n        <Header onEventAdd={handleEventAddClick} />\n        <Toolbar\n          date={date}\n          onDateNext={handleDateNext}\n          onDatePrev={handleDatePrev}\n          onDateToday={handleDateToday}\n          onViewChange={handleViewChange}\n          view={view}\n        />\n        <Paper\n          className={classes.calendar}\n          component={Box}\n          mt={3}\n          p={2}\n        >\n          <FullCalendar\n            defaultDate={date}\n            defaultView={view}\n            droppable\n            editable\n            eventClick={handleEventSelect}\n            eventDrop={handleEventDrop}\n            eventLimit\n            eventResizableFromStart\n            eventResize={handleEventResize}\n            events={events}\n            header={false}\n            height={800}\n            weight={50}\n            ref={calendarRef}\n            rerenderDelay={10}\n            select={handleSlotsSelect}\n            selectable\n            weekends\n            allDaySlot={false}\n            slotDuration='01:00:00'\n            plugins={[\n              dayGridPlugin,\n              timeGridPlugin,\n              interactionPlugin,\n              listPlugin,\n              timelinePlugin\n            ]}\n          />\n        </Paper>\n        <AddEditEventModal\n          event={modal.event}\n          mode={modal.mode}\n          onAdd={handleEventAdd}\n          onCancel={handleModalClose}\n          onDelete={handleEventDelete}\n          onEdit={handleEventEdit}\n          open={modal.open}\n        />\n      </Container>\n    </Page>\n  );\n}\n\nexport default CalendarView;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export const wait = (time) => new Promise((res) => setTimeout(res, time));\n\nexport default wait;\n"],"sourceRoot":""}