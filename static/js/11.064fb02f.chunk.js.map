{"version":3,"sources":["views/reports/DashboardAlternativeView/CustomerActivity.js","views/reports/DashboardAlternativeView/EarningsSegmentation/Chart.js","views/reports/DashboardAlternativeView/EarningsSegmentation/index.js","views/reports/DashboardAlternativeView/FinancialStats/Chart.js","views/reports/DashboardAlternativeView/FinancialStats/index.js","views/reports/DashboardAlternativeView/Header.js","views/reports/DashboardAlternativeView/LatestOrders.js","views/reports/DashboardAlternativeView/MostProfitableProducts/CircularProgress.js","views/reports/DashboardAlternativeView/MostProfitableProducts/index.js","views/reports/DashboardAlternativeView/Overview.js","views/reports/DashboardAlternativeView/TopReferrals.js","views/reports/DashboardAlternativeView/index.js","hooks/useIsMountedRef.js","components/GenericMoreButton.js","utils/getInitials.js","components/Label.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js"],"names":["useStyles","makeStyles","theme","root","item","padding","spacing","flexGrow","borderRight","palette","divider","CustomerActivity","className","rest","classes","isMountedRef","useIsMountedRef","useState","activities","setActivities","getActivities","useCallback","axios","get","then","response","current","data","useEffect","Card","clsx","CardHeader","title","action","GenericMoreButton","Divider","Box","display","Typography","align","variant","color","component","gutterBottom","List","disablePadding","map","activity","i","ListItem","length","key","id","ListItemAvatar","Avatar","alt","RouterLink","src","customer","avatar","to","getInitials","name","ListItemText","disableTypography","primary","Link","underline","secondary","description","noWrap","moment","createdAt","fromNow","Chart","dataProp","useTheme","datasets","dataset","borderWidth","borderColor","background","default","hoverBorderColor","labels","options","responsive","maintainAspectRatio","animation","cutoutPercentage","legend","layout","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","backgroundColor","dark","titleFontColor","text","bodyFontColor","footerFontColor","callbacks","label","tooltipItem","_data","index","value","textAlign","flexDirection","justifyContent","EarningsSegmentation","earnings","setEarnings","getEarnings","p","position","minHeight","main","thisYear","barThickness","maxBarThickness","barPercentage","categoryPercentage","fade","lastYear","cornerRadius","scales","xAxes","gridLines","drawBorder","ticks","fontColor","yAxes","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","min","maxTicksLimit","callback","yLabel","chart","height","FinancialStats","minWidth","pt","pr","pl","timeRanges","actionIcon","marginRight","Header","actionRef","useRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","Button","ref","onClick","SvgIcon","fontSize","Menu","anchorEl","onClose","open","PaperProps","menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","t","MenuItem","defaultProps","labelColors","complete","pending","rejected","navigateNextIcon","marginLeft","LatestOrders","orders","setOrders","getOrders","Table","TableHead","TableRow","TableCell","sortDirection","Tooltip","enterDelay","TableSortLabel","active","direction","TableBody","order","hover","items","currency","Label","status","format","size","width","circle1","stroke","type","fill","strokeWidth","circle2","strokeDasharray","CircularProgress","viewBox","d","image","flexShrink","subscriptions","fontWeight","typography","fontWeightMedium","colors","green","MostProfitableProducts","products","setProducts","getProducts","product","alignItems","ml","price","mr","progress","breakpoints","up","down","borderBottom","valueContainer","Overview","overview","md","sm","xs","fontWeightBold","common","white","TopReferrals","referrals","setReferrals","getReferrals","referral","style","initials","primaryTypographyProps","paddingTop","paddingBottom","paddingLeft","paddingRight","DashboardAlternativeView","Page","Container","maxWidth","lg","xl","isMounted","memo","props","moreRef","openMenu","setOpenMenu","replace","split","slice","v","toUpperCase","join","fontFamily","borderRadius","whiteSpace","cursor","pxToRem","letterSpacing","textTransform","error","success","warning","children","React","other","_objectWithoutProperties","context","ListContext","_extends","alignItemsFlexStart","withStyles","marginTop"],"mappings":"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","file":"static/js/11.064fb02f.chunk.js","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction CustomerActivity({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [activities, setActivities] = useState(null);\n\n  const getActivities = useCallback(() => {\n    axios\n      .get('/api/reports/customer-activity')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setActivities(response.data.activities);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getActivities();\n  }, [getActivities]);\n\n  if (!activities) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Customer Activity\"\n        action={<GenericMoreButton />}\n      />\n      <Divider />\n      <Box display=\"flex\">\n        <div className={classes.item}>\n          <Typography\n            align=\"center\"\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            15,245\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Registered\n          </Typography>\n        </div>\n        <Divider />\n        <div className={classes.item}>\n          <Typography\n            align=\"center\"\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            357\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Online\n          </Typography>\n        </div>\n      </Box>\n      <Divider />\n      <List disablePadding>\n        {activities.map((activity, i) => (\n          <ListItem\n            divider={i < activities.length - 1}\n            key={activity.id}\n          >\n            <ListItemAvatar>\n              <Avatar\n                alt=\"Customer\"\n                component={RouterLink}\n                src={activity.customer.avatar}\n                to=\"#\"\n              >\n                {getInitials(activity.customer.name)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={(\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"#\"\n                  underline=\"none\"\n                  variant=\"h6\"\n                >\n                  {activity.customer.name}\n                </Link>\n              )}\n              secondary={(\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                  {activity.description}\n                </Typography>\n              )}\n            />\n            <Typography\n              color=\"textSecondary\"\n              noWrap\n              variant=\"caption\"\n            >\n              {moment(activity.createdAt).fromNow()}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nCustomerActivity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CustomerActivity;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\n\nfunction Chart({ data: dataProp, ...rest }) {\n  const theme = useTheme();\n\n  const data = {\n    datasets: dataProp.datasets.map(((dataset) => ({\n      ...dataset,\n      borderWidth: 8,\n      borderColor: theme.palette.background.default,\n      hoverBorderColor: theme.palette.background.default\n    }))),\n    labels: dataProp.labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        label(tooltipItem, _data) {\n          const label = _data.labels[tooltipItem.index];\n          const value = _data.datasets[0].data[tooltipItem.index];\n\n          return `${label}: ${value}%`;\n        }\n      }\n    }\n  };\n\n  return (\n    <Doughnut\n      data={data}\n      options={options}\n      {...rest}\n    />\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired\n};\n\nexport default Chart;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction EarningsSegmentation({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [earnings, setEarnings] = useState(null);\n\n  const getEarnings = useCallback(() => {\n    axios\n      .get('/api/reports/earnings')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setEarnings(response.data.earnings);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEarnings();\n  }, [getEarnings]);\n\n  if (!earnings) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Earnings Segmentation\"\n      />\n      <Divider />\n      <Box\n        p={3}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <Chart data={earnings} />\n      </Box>\n      <Divider />\n      <Box display=\"flex\">\n        {earnings.labels.map((label, i) => (\n          <div\n            key={label}\n            className={classes.item}\n          >\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n            >\n              {earnings.datasets[0].data[i]}\n              %\n            </Typography>\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              {label}\n            </Typography>\n          </div>\n        ))}\n      </Box>\n    </Card>\n  );\n}\n\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\n\nexport default EarningsSegmentation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  fade,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nfunction Chart({\n  data: dataProp,\n  labels,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        label: 'This year',\n        backgroundColor: theme.palette.secondary.main,\n        data: dataProp.thisYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      },\n      {\n        label: 'Last year',\n        backgroundColor: fade(theme.palette.secondary.main, 0.25),\n        data: dataProp.lastYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cornerRadius: 20,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 5,\n            callback: (value) => (value > 0 ? `${value}K` : value)\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem) => {\n          let label = `Sales: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Bar\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chart: {\n    height: 400\n  }\n}));\n\nfunction FinancialStats({ className, ...rest }) {\n  const classes = useStyles();\n  const stats = {\n    thisYear: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20],\n    lastYear: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13]\n  };\n  const labels = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Financial Stats\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box\n          minWidth={700}\n          pt={4}\n          pr={2}\n          pl={2}\n        >\n          <Chart\n            className={classes.chart}\n            data={stats}\n            labels={labels}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nFinancialStats.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FinancialStats;\n","import React, { useRef, useState } from 'react';\n// import { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  // Breadcrumbs,\n  Button,\n  Grid,\n  // Link,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n// import NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Calendar as CalendarIcon } from 'react-feather';\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 30 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const [timeRange, setTimeRange] = useState(timeRanges[2].text);\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        {/* <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Reports\n          </Typography>\n        </Breadcrumbs> */}\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Finance Overview\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <CalendarIcon />\n          </SvgIcon>\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          PaperProps={{ className: classes.menu }}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map((t) => (\n            <MenuItem\n              key={t.value}\n              onClick={() => setTimeRange(t.text)}\n            >\n              {t.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst labelColors = {\n  complete: 'success',\n  pending: 'warning',\n  rejected: 'error'\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction LatestOrders({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [orders, setOrders] = useState(null);\n\n  const getOrders = useCallback(() => {\n    axios\n      .get('/api/reports/latest-orders')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setOrders(response.data.orders);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getOrders();\n  }, [getOrders]);\n\n  if (!orders) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Latest Orders\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Order ID\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell>\n                  Items\n                </TableCell>\n                <TableCell>\n                  Total\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell align=\"right\">\n                  Date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map((order) => (\n                <TableRow\n                  hover\n                  key={order.id}\n                >\n                  <TableCell>{order.ref}</TableCell>\n                  <TableCell>{order.customer.name}</TableCell>\n                  <TableCell>{order.items}</TableCell>\n                  <TableCell>\n                    {order.currency}\n                    {order.value}\n                  </TableCell>\n                  <TableCell>\n                    <Label color={labelColors[order.status]}>\n                      {order.status}\n                    </Label>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {moment(order.createdAt).format('DD MMM, YYYY hh:mm:ss')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"/app/management/orders\"\n        >\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 56,\n    height: 56\n  },\n  circle1: {\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\n    fill: 'none',\n    strokeWidth: 4\n  },\n  circle2: {\n    stroke: theme.palette.secondary.main,\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  }\n}));\n\nfunction CircularProgress({ value, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <svg viewBox=\"0 0 36 36\">\n        <path\n          className={classes.circle1}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray=\"100, 100\"\n        />\n        <path\n          className={classes.circle2}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray={`${value}, 100`}\n        />\n      </svg>\n    </div>\n  );\n}\n\nCircularProgress.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport CircularProgress from './CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    flexShrink: 0,\n    height: 56,\n    width: 56\n  },\n  subscriptions: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  value: {\n    color: colors.green[600],\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction MostProfitableProducts({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [products, setProducts] = useState(null);\n\n  const getProducts = useCallback(() => {\n    axios\n      .get('/api/reports/profitable-products')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProducts(response.data.products);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  if (!products) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Most Profitable Products\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableBody>\n              {products.map((product) => (\n                <TableRow\n                  hover\n                  key={product.id}\n                >\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      <img\n                        alt=\"Product\"\n                        className={classes.image}\n                        src={product.image}\n                      />\n                      <Box ml={2}>\n                        <Typography\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {product.name}\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          <span className={classes.subscriptions}>\n                            {product.subscriptions}\n                          </span>\n                          {' '}\n                          Active\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                    >\n                      Price\n                    </Typography>\n                    <Typography\n                      noWrap\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                    >\n                      <span className={classes.value}>\n                        {product.currency}\n                        {product.price}\n                      </span>\n                      {' '}\n                      monthly\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"flex-end\"\n                    >\n                      <Box mr={2}>\n                        <Typography\n                          align=\"right\"\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {product.progress}\n                          %\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          Conversion Rate\n                        </Typography>\n                      </Box>\n                      <CircularProgress value={product.progress} />\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n        >\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nMostProfitableProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default MostProfitableProducts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Card,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction Overview({ className, ...rest }) {\n  const classes = useStyles();\n  const overview = {\n    income: '854,355.00',\n    expanses: '373,250.50',\n    profit: '123,532.00',\n    subscriptions: '26,000'\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n      >\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Income\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              $\n              {overview.income}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"success\"\n            >\n              +25%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Expanses\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              $\n              {overview.expanses}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"success\"\n            >\n              +12%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Net Profit\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              {overview.profit}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"error\"\n            >\n              -20%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Active Subscriptions\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              {overview.subscriptions}\n            </Typography>\n          </div>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\nOverview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Overview;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  avatar: {\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightBold,\n    color: theme.palette.common.white\n  }\n}));\n\nfunction TopReferrals({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [referrals, setReferrals] = useState(null);\n\n  const getReferrals = useCallback(() => {\n    axios\n      .get('/api/reports/top-referrals')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setReferrals(response.data.referrals);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getReferrals();\n  }, [getReferrals]);\n\n  if (!referrals) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Top Referrals\"\n      />\n      <Divider />\n      <List disablePadding>\n        {referrals.map((referral, i) => (\n          <ListItem\n            divider={i < referrals.length - 1}\n            key={referral.name}\n          >\n            <ListItemAvatar>\n              <Avatar\n                className={classes.avatar}\n                size=\"small\"\n                style={{ backgroundColor: referral.color }}\n              >\n                {referral.initials}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={referral.name}\n              primaryTypographyProps={{ variant: 'h6' }}\n            />\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              {referral.value}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nTopReferrals.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopReferrals;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport CustomerActivity from './CustomerActivity';\nimport EarningsSegmentation from './EarningsSegmentation';\nimport FinancialStats from './FinancialStats';\nimport Header from './Header';\nimport LatestOrders from './LatestOrders';\nimport MostProfitableProducts from './MostProfitableProducts';\nimport Overview from './Overview';\nimport TopReferrals from './TopReferrals';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  container: {\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 64,\n      paddingRight: 64\n    }\n  }\n}));\n\nfunction DashboardAlternativeView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard Alternative\"\n    >\n      <Container\n        maxWidth={false}\n        className={classes.container}\n      >\n        <Header />\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            xs={12}\n          >\n            <Overview />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            xl={9}\n            xs={12}\n          >\n            <FinancialStats />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xl={3}\n            xs={12}\n          >\n            <EarningsSegmentation />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            xs={12}\n          >\n            <LatestOrders />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <CustomerActivity />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            xs={12}\n          >\n            <MostProfitableProducts />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <TopReferrals />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n\nexport default DashboardAlternativeView;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nfunction GenericMoreButton(props) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          {...props}\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <AchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Achive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nGenericMoreButton.propTypes = {\n  className: PropTypes.string\n};\n\nexport default memo(GenericMoreButton);\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  fade,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase',\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: '#FF6F73',\n    backgroundColor: fade('#FF6F73', 0.08)\n  },\n  success: {\n    color: '#2ECC97',\n    backgroundColor: fade('#2ECC97', 0.08)\n  },\n  warning: {\n    color: '#FF484D',\n    backgroundColor: fade('#FF484D', 0.08)\n  }\n}));\n\nfunction Label({\n  className,\n  color,\n  children,\n  style,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nLabel.defaultProps = {\n  className: '',\n  color: 'secondary'\n};\n\nexport default Label;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);"],"sourceRoot":""}